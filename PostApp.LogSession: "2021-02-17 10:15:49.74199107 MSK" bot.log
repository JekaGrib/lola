DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Kate&last_name=Grick&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40786, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Kate"),("last_name",Just "Grick"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Rick&last_name=Stam&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40790, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Rick"),("last_name",Just "Stam"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Luck&last_name=Smith&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40794, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Luck"),("last_name",Just "Smith"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Chris&last_name=Wirt&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40798, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Chris"),("last_name",Just "Wirt"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Poll&last_name=Leon&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40802, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Poll"),("last_name",Just "Leon"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Vick&last_name=Autris&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40806, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Vick"),("last_name",Just "Autris"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Tom&last_name=Ester&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40810, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Tom"),("last_name",Just "Ester"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940. HttpExceptionRequest Request {\n  host                 = \"images.pexels.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = []\n  path                 = \"/photos/4617160/pexels-photo-4617160.jpeg\"\n  queryString          = \"?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n (ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = <assumed to be undefined>, addrCanonName = <assumed to be undefined>}, host name: Just \"images.pexels.com\", service name: Just \"443\"): does not exist (Temporary failure in name resolution))"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=2&author_info=SuperAuthor&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40814, pathInfo = ["createAuthor"], queryString = [("user_id",Just "2"),("author_info",Just "SuperAuthor"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=3&author_info=Demon&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40818, pathInfo = ["createAuthor"], queryString = [("user_id",Just "3"),("author_info",Just "Demon"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=4&author_info=Tall&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40822, pathInfo = ["createAuthor"], queryString = [("user_id",Just "4"),("author_info",Just "Tall"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Hobby", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40826, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Hobby")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Work", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40830, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Work")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Love", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40834, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Love")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Sport&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40838, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Sport"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Art&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40842, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Art"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Bake&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40846, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Bake"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Teacher&super_category_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40850, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Teacher"),("super_category_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Football&super_category_id=5", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40854, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Football"),("super_category_id",Just "5")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Tennis&super_category_id=5", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40858, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Tennis"),("super_category_id",Just "5")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=KinderGardenTeacher&super_category_id=8", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40862, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "KinderGardenTeacher"),("super_category_id",Just "8")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=BigTennis&super_category_id=10", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40866, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "BigTennis"),("super_category_id",Just "10")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=PingPong&super_category_id=10", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40870, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "PingPong"),("super_category_id",Just "10")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Sport", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40874, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Sport")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Love", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40878, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Love")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Cats", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40882, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Cats")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Dogs", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40886, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Dogs")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Auto", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40890, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Auto")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Kitchen", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40894, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Kitchen")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Home", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40898, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Home")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SecretError "user_id: 6 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","849")], isSecure = False, remoteHost = 127.0.0.1:40902, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 849, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 2 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","1145"),("Expect","100-continue")], isSecure = False, remoteHost = 127.0.0.1:40906, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 1145, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 3 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","556")], isSecure = False, remoteHost = 127.0.0.1:40910, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 556, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 4 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","772")], isSecure = False, remoteHost = 127.0.0.1:40914, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 772, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 2 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=1", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40918, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "1")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 2 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=3&password=654321&draft_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40922, pathInfo = ["publishDraft"], queryString = [("user_id",Just "3"),("password",Just "654321"),("draft_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 3 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=4&password=654321&draft_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40926, pathInfo = ["publishDraft"], queryString = [("user_id",Just "4"),("password",Just "654321"),("draft_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 4 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=4", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40930, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "4")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 2 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=1", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40934, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "1")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 2 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=3&password=654321&draft_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40938, pathInfo = ["publishDraft"], queryString = [("user_id",Just "3"),("password",Just "654321"),("draft_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 3 doesn`t exist."
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=4&password=654321&draft_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:40942, pathInfo = ["publishDraft"], queryString = [("user_id",Just "4"),("password",Just "654321"),("draft_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
WARNING: SimpleError "user_id: 4 doesn`t exist."
