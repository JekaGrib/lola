DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/getTag/3", rawQueryString = "", requestHeaders = [("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","b8cc9492-4310-468e-94e9-af2bb99a60b5"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Type","multipart/form-data; boundary=--------------------------164896816014181028774623"),("Content-Length","170")], isSecure = False, remoteHost = 127.0.0.1:50684, pathInfo = ["getTag","3"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 170, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get tag command
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Select data from DB. Table: tags
INFO: Data received from DB
DEBUG: Output response: "{\"tag_id\":3,\"tag_name\":\"nunc\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Kate&last_name=Grick&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50690, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Kate"),("last_name",Just "Grick"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id543
INFO: User_id: 543 created
DEBUG: Output response: "{\"user_id\":543,\"first_name\":\"Kate\",\"last_name\":\"Grick\",\"user_pic_id\":543,\"user_pic_url\":\"http://localhost:3000/picture/543\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Rick&last_name=Stam&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50698, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Rick"),("last_name",Just "Stam"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id544
INFO: User_id: 544 created
DEBUG: Output response: "{\"user_id\":544,\"first_name\":\"Rick\",\"last_name\":\"Stam\",\"user_pic_id\":544,\"user_pic_url\":\"http://localhost:3000/picture/544\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createUser", rawQueryString = "?password=654321&first_name=Luck&last_name=Smith&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50702, pathInfo = ["createUser"], queryString = [("password",Just "654321"),("first_name",Just "Luck"),("last_name",Just "Smith"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create user command
INFO: All parameters parsed
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id545
INFO: User_id: 545 created
DEBUG: Output response: "{\"user_id\":545,\"first_name\":\"Luck\",\"last_name\":\"Smith\",\"user_pic_id\":545,\"user_pic_url\":\"http://localhost:3000/picture/545\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Chris&last_name=Wirt&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50706, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Chris"),("last_name",Just "Wirt"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id546
INFO: User_id: 546 created as admin
DEBUG: Output response: "{\"user_id\":546,\"first_name\":\"Chris\",\"last_name\":\"Wirt\",\"user_pic_id\":546,\"user_pic_url\":\"http://localhost:3000/picture/546\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Poll&last_name=Leon&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50710, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Poll"),("last_name",Just "Leon"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id547
INFO: User_id: 547 created as admin
DEBUG: Output response: "{\"user_id\":547,\"first_name\":\"Poll\",\"last_name\":\"Leon\",\"user_pic_id\":547,\"user_pic_url\":\"http://localhost:3000/picture/547\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Vick&last_name=Autris&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50714, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Vick"),("last_name",Just "Autris"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id548
INFO: User_id: 548 created as admin
DEBUG: Output response: "{\"user_id\":548,\"first_name\":\"Vick\",\"last_name\":\"Autris\",\"user_pic_id\":548,\"user_pic_url\":\"http://localhost:3000/picture/548\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAdmin", rawQueryString = "?password=654321&first_name=Tom&last_name=Ester&user_pic_url=https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress%26cs=tinysrgb%26dpr=2%26h=650%26w=940&create_admin_key=lola", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50718, pathInfo = ["createAdmin"], queryString = [("password",Just "654321"),("first_name",Just "Tom"),("last_name",Just "Ester"),("user_pic_url",Just "https://images.pexels.com/photos/4617160/pexels-photo-4617160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940"),("create_admin_key",Just "lola")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create admin command
DEBUG: Select data from DB. Table: key
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: DB return user_id549
INFO: User_id: 549 created as admin
DEBUG: Output response: "{\"user_id\":549,\"first_name\":\"Tom\",\"last_name\":\"Ester\",\"user_pic_id\":549,\"user_pic_url\":\"http://localhost:3000/picture/549\",\"user_create_date\":\"2021-02-26\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=2&author_info=SuperAuthor&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50722, pathInfo = ["createAuthor"], queryString = [("user_id",Just "2"),("author_info",Just "SuperAuthor"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=3&author_info=Demon&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50726, pathInfo = ["createAuthor"], queryString = [("user_id",Just "3"),("author_info",Just "Demon"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createAuthor", rawQueryString = "?user_id=4&author_info=Tall&admin_id=6&password=654321", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50730, pathInfo = ["createAuthor"], queryString = [("user_id",Just "4"),("author_info",Just "Tall"),("admin_id",Just "6"),("password",Just "654321")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create author command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Hobby", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50734, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Hobby")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Work", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50738, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Work")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Love", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50742, pathInfo = ["createCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Love")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Sport&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50746, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Sport"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Art&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50750, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Art"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Bake&super_category_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50754, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Bake"),("super_category_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Teacher&super_category_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50758, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Teacher"),("super_category_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Football&super_category_id=5", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50762, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Football"),("super_category_id",Just "5")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=Tennis&super_category_id=5", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50766, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "Tennis"),("super_category_id",Just "5")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=KinderGardenTeacher&super_category_id=8", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50770, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "KinderGardenTeacher"),("super_category_id",Just "8")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=BigTennis&super_category_id=10", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50774, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "BigTennis"),("super_category_id",Just "10")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createSubCategory", rawQueryString = "?password=654321&admin_id=6&category_name=PingPong&super_category_id=10", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50778, pathInfo = ["createSubCategory"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("category_name",Just "PingPong"),("super_category_id",Just "10")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create sub category command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Sport", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50782, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Sport")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Love", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50786, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Love")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Cats", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50790, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Cats")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Dogs", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50794, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Dogs")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Auto", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50798, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Auto")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Kitchen", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50802, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Kitchen")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/createTag", rawQueryString = "?password=654321&admin_id=6&tag_name=Home", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50806, pathInfo = ["createTag"], queryString = [("password",Just "654321"),("admin_id",Just "6"),("tag_name",Just "Home")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create tag command
INFO: All authorize parameters parsed
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SecretError "INVALID pwd, user is NOT admin"
DEBUG: Output response: "Status 404 Not Found"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","867")], isSecure = False, remoteHost = 127.0.0.1:50810, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 867, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","1277"),("Expect","100-continue")], isSecure = False, remoteHost = 127.0.0.1:50814, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 1277, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","556")], isSecure = False, remoteHost = 127.0.0.1:50818, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 556, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*"),("Content-Type","application/json"),("Content-Length","772")], isSecure = False, remoteHost = 127.0.0.1:50822, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 772, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=1", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50826, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "1")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=3&password=654321&draft_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50830, pathInfo = ["publishDraft"], queryString = [("user_id",Just "3"),("password",Just "654321"),("draft_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=4&password=654321&draft_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50834, pathInfo = ["publishDraft"], queryString = [("user_id",Just "4"),("password",Just "654321"),("draft_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=4", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50838, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "4")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=2&password=654321&draft_id=1", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50842, pathInfo = ["publishDraft"], queryString = [("user_id",Just "2"),("password",Just "654321"),("draft_id",Just "1")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=3&password=654321&draft_id=2", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50846, pathInfo = ["publishDraft"], queryString = [("user_id",Just "3"),("password",Just "654321"),("draft_id",Just "2")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "GET", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=4&password=654321&draft_id=3", requestHeaders = [("Host","localhost:3000"),("User-Agent","curl/7.68.0"),("Accept","*/*")], isSecure = False, remoteHost = 127.0.0.1:50850, pathInfo = ["publishDraft"], queryString = [("user_id",Just "4"),("password",Just "654321"),("draft_id",Just "3")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 0, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
WARNING: SimpleError "INVALID password"
DEBUG: Output response: "{\"ok\":false,\"info\":\"INVALID password\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","9c858180-e7ae-420c-8ad9-c51a3882d465"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","660")], isSecure = False, remoteHost = 127.0.0.1:50858, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 660, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking existence entity (category_id) in the DB
INFO: Entity (category_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://cdn.pixabay.com/photo/2020/10/24/03/09/street-5680458__340.jpg"
DEBUG: Output response: "{\"ok\":false,\"info\":\"Invalid picture url:https://cdn.pixabay.com/photo/2020/10/24/03/09/street-5680458__340.jpg\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/createNewDraft", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","50ac5dc7-eac6-4a11-bf6a-bff2fd881de4"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","540")], isSecure = False, remoteHost = 127.0.0.1:50874, pathInfo = ["createNewDraft"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 540, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Create new draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking existence entity (category_id) in the DB
INFO: Entity (category_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: Select data from DB. Table: tags
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Output response: "{\"draft_id\":151,\"post_id\":\"NULL\",\"author\":{\"author_id\":6,\"user_id\":6,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"draft_name\":\"rock\",\"draft_category\":{\"category_id\":2,\"category_name\":\"felis\",\"super_category\":\"NULL\"},\"draft_text\":\"heyhey\",\"draft_main_pic_id\":550,\"draft_main_pic_url\":\"http://localhost:3000/picture/550\",\"draft_pics\":[{\"pic_id\":551,\"pic_url\":\"http://localhost:3000/picture/551\"},{\"pic_id\":552,\"pic_url\":\"http://localhost:3000/picture/552\"},{\"pic_id\":553,\"pic_url\":\"http://localhost:3000/picture/553\"}],\"draft_tags\":[{\"tag_id\":2,\"tag_name\":\"imperdiet\"},{\"tag_id\":3,\"tag_name\":\"nunc\"},{\"tag_id\":4,\"tag_name\":\"ultrices\"}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/publishDraft", rawQueryString = "?user_id=6&password=XJXDqMimJw&draft_id=151", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","1b96251d-168c-4e9e-aaea-55526db5882f"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","484")], isSecure = False, remoteHost = 127.0.0.1:50882, pathInfo = ["publishDraft"], queryString = [("user_id",Just "6"),("password",Just "XJXDqMimJw"),("draft_id",Just "151")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 484, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Publish draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking existence entity (draft_id) in the DB
INFO: Entity (draft_id) exist
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: drafts
INFO: Data received from DB
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
DEBUG: Select data from DB. Table: drafts AS d JOIN authors AS a ON d.author_id=a.author_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: draftspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: draftstags AS dt JOIN tags ON dt.tag_id=tags.tag_id
INFO: Data received from DB
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Output response: "{\"post_id\":101,\"author\":{\"author_id\":6,\"user_id\":6,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"post_name\":\"rock\",\"post_create_date\":\"2021-02-26\",\"post_category\":{\"category_id\":2,\"category_name\":\"felis\",\"super_category\":\"NULL\"},\"post_text\":\"heyhey\",\"post_main_pic_id\":550,\"post_main_pic_url\":\"http://localhost:3000/picture/550\",\"post_pics\":[{\"pic_id\":551,\"pic_url\":\"http://localhost:3000/picture/551\"},{\"pic_id\":552,\"pic_url\":\"http://localhost:3000/picture/552\"},{\"pic_id\":553,\"pic_url\":\"http://localhost:3000/picture/553\"}],\"post_tags\":[{\"tag_id\":2,\"tag_name\":\"imperdiet\"},{\"tag_id\":3,\"tag_name\":\"nunc\"},{\"tag_id\":4,\"tag_name\":\"ultrices\"}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/updateDraft/151", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","c299b569-a779-4611-a53c-05144326ee8a"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","634")], isSecure = False, remoteHost = 127.0.0.1:50890, pathInfo = ["updateDraft","151"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 634, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Update draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking existence entity (draft_id) in the DB
INFO: Entity (draft_id) exist
DEBUG: Checking existence entity (category_id) in the DB
INFO: Entity (category_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
DEBUG: Select data from DB. Table: drafts
INFO: Data received from DB
WARNING: SimpleError "Invalid picture url:https://cdn.pixabay.com/photo/2019/10/15/16/20/autumn-4552274_960_720.jpg"
DEBUG: Output response: "{\"ok\":false,\"info\":\"Invalid picture url:https://cdn.pixabay.com/photo/2019/10/15/16/20/autumn-4552274_960_720.jpg\"}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/updateDraft/151", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","b7fdaa68-3059-4cea-996f-d844254c4e6c"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","473")], isSecure = False, remoteHost = 127.0.0.1:50890, pathInfo = ["updateDraft","151"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 473, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Update draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking existence entity (draft_id) in the DB
INFO: Entity (draft_id) exist
DEBUG: Checking existence entity (category_id) in the DB
INFO: Entity (category_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking existence entity (tag_id) in the DB
INFO: Entity (tag_id) exist
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
DEBUG: Select data from DB. Table: drafts
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
INFO: Data received from DB
DEBUG: Select data from DB. Table: tags
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Output response: "{\"draft_id\":151,\"post_id\":\"NULL\",\"author\":{\"author_id\":6,\"user_id\":6,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"draft_name\":\"rock\",\"draft_category\":{\"category_id\":2,\"category_name\":\"felis\",\"super_category\":\"NULL\"},\"draft_text\":\"heyhey\",\"draft_main_pic_id\":554,\"draft_main_pic_url\":\"http://localhost:3000/picture/554\",\"draft_pics\":[{\"pic_id\":555,\"pic_url\":\"http://localhost:3000/picture/555\"},{\"pic_id\":556,\"pic_url\":\"http://localhost:3000/picture/556\"}],\"draft_tags\":[{\"tag_id\":1,\"tag_name\":\"interdum\"},{\"tag_id\":2,\"tag_name\":\"imperdiet\"},{\"tag_id\":3,\"tag_name\":\"nunc\"}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getDraft", rawQueryString = "?user_id=6&password=XJXDqMimJw&draft_id=151", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","e9697612-e97e-4423-8422-2bbe14bfd316"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50904, pathInfo = ["getDraft"], queryString = [("user_id",Just "6"),("password",Just "XJXDqMimJw"),("draft_id",Just "151")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get draft command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: drafts
INFO: Data received from DB
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
DEBUG: Select data from DB. Table: drafts AS d JOIN authors AS a ON d.author_id=a.author_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: draftspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: draftstags AS dt JOIN tags ON dt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Output response: "{\"draft_id\":151,\"post_id\":\"NULL\",\"author\":{\"author_id\":6,\"user_id\":6,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"draft_name\":\"rock\",\"draft_category\":{\"category_id\":2,\"category_name\":\"felis\",\"super_category\":\"NULL\"},\"draft_text\":\"heyhey\",\"draft_main_pic_id\":554,\"draft_main_pic_url\":\"http://localhost:3000/picture/554\",\"draft_pics\":[{\"pic_id\":555,\"pic_url\":\"http://localhost:3000/picture/555\"},{\"pic_id\":556,\"pic_url\":\"http://localhost:3000/picture/556\"}],\"draft_tags\":[{\"tag_id\":1,\"tag_name\":\"interdum\"},{\"tag_id\":2,\"tag_name\":\"imperdiet\"},{\"tag_id\":3,\"tag_name\":\"nunc\"}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getDrafts", rawQueryString = "?page=1&user_id=6&password=XJXDqMimJw", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","b07215ac-f284-4a0e-9b6a-37ad3e908b86"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50912, pathInfo = ["getDrafts"], queryString = [("page",Just "1"),("user_id",Just "6"),("password",Just "XJXDqMimJw")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get drafts command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: users
INFO: Data received from DB
DEBUG: Checking in DB is user author
DEBUG: Select data from DB. Table: authors
INFO: Data received from DB
DEBUG: Select data from DB. Table: drafts JOIN authors ON authors.author_id = drafts.author_id
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getPosts/1", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","b7bfc669-ea7f-4929-b9eb-c9eafa7a456a"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50924, pathInfo = ["getPosts","1"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get posts command
DEBUG: Select data from DB. Table: posts JOIN authors ON authors.author_id = posts.author_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Output response: "{\"page\":1,\"posts\":[{\"post_id\":101,\"author\":{\"author_id\":6,\"user_id\":6,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"post_name\":\"rock\",\"post_create_date\":\"2021-02-26\",\"post_category\":{\"category_id\":2,\"category_name\":\"felis\",\"super_category\":\"NULL\"},\"post_text\":\"heyhey\",\"post_main_pic_id\":550,\"post_main_pic_url\":\"http://localhost:3000/picture/550\",\"post_pics\":[{\"pic_id\":551,\"pic_url\":\"http://localhost:3000/picture/551\"},{\"pic_id\":552,\"pic_url\":\"http://localhost:3000/picture/552\"},{\"pic_id\":553,\"pic_url\":\"http://localhost:3000/picture/553\"}],\"post_tags\":[{\"tag_id\":2,\"tag_name\":\"imperdiet\"},{\"tag_id\":3,\"tag_name\":\"nunc\"},{\"tag_id\":4,\"tag_name\":\"ultrices\"}]},{\"post_id\":40,\"author\":{\"author_id\":35,\"user_id\":35,\"author_info\":\"Nunc rhoncus dui vel sem. Sed sagittis.\"},\"post_name\":\"metus arcu\",\"post_create_date\":\"2021-02-17\",\"post_category\":{\"category_id\":180,\"category_name\":\"lobortis\",\"super_category\":{\"category_id\":135,\"category_name\":\"augue\",\"super_category\":{\"category_id\":88,\"category_name\":\"dolor\",\"super_category\":{\"category_id\":37,\"category_name\":\"lacus\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}}}}},\"post_text\":\"sed vel enim sit amet nunc viverra dapibus nulla suscipit ligula in lacus curabitur at ipsum ac tellus semper interdum\",\"post_main_pic_id\":18,\"post_main_pic_url\":\"http://localhost:3000/picture/18\",\"post_pics\":[{\"pic_id\":40,\"pic_url\":\"http://localhost:3000/picture/40\"},{\"pic_id\":31,\"pic_url\":\"http://localhost:3000/picture/31\"},{\"pic_id\":351,\"pic_url\":\"http://localhost:3000/picture/351\"},{\"pic_id\":492,\"pic_url\":\"http://localhost:3000/picture/492\"}],\"post_tags\":[{\"tag_id\":123,\"tag_name\":\"nibh\"},{\"tag_id\":8,\"tag_name\":\"venenatis\"},{\"tag_id\":107,\"tag_name\":\"adipiscing\"},{\"tag_id\":74,\"tag_name\":\"ut\"},{\"tag_id\":68,\"tag_name\":\"vel\"},{\"tag_id\":6,\"tag_name\":\"eget\"},{\"tag_id\":63,\"tag_name\":\"quis\"}]},{\"post_id\":16,\"author\":{\"author_id\":33,\"user_id\":33,\"author_info\":\"Duis consequat dui nec nisi volutpat eleifend. Donec ut dolor. Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis.\"},\"post_name\":\"convallis\",\"post_create_date\":\"2021-02-02\",\"post_category\":{\"category_id\":66,\"category_name\":\"nec\",\"super_category\":{\"category_id\":46,\"category_name\":\"lacinia\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}}},\"post_text\":\"mi nulla ac enim in tempor turpis nec euismod scelerisque quam turpis adipiscing lorem vitae mattis nibh ligula nec sem duis aliquam convallis nunc\",\"post_main_pic_id\":96,\"post_main_pic_url\":\"http://localhost:3000/picture/96\",\"post_pics\":[{\"pic_id\":114,\"pic_url\":\"http://localhost:3000/picture/114\"},{\"pic_id\":421,\"pic_url\":\"http://localhost:3000/picture/421\"},{\"pic_id\":46,\"pic_url\":\"http://localhost:3000/picture/46\"},{\"pic_id\":64,\"pic_url\":\"http://localhost:3000/picture/64\"}],\"post_tags\":[{\"tag_id\":29,\"tag_name\":\"amet\"},{\"tag_id\":67,\"tag_name\":\"cras\"},{\"tag_id\":103,\"tag_name\":\"consequat\"},{\"tag_id\":104,\"tag_name\":\"iaculis\"},{\"tag_id\":136,\"tag_name\":\"mattis\"}]},{\"post_id\":37,\"author\":{\"author_id\":4,\"user_id\":4,\"author_info\":\"Cras mi pede, malesuada in, imperdiet et, commodo vulputate, justo.\"},\"post_name\":\"tempus vivamus in\",\"post_create_date\":\"2021-01-14\",\"post_category\":{\"category_id\":37,\"category_name\":\"lacus\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}},\"post_text\":\"etiam justo etiam pretium iaculis justo in hac habitasse platea dictumst etiam faucibus cursus urna ut tellus nulla ut erat id mauris vulputate elementum nullam varius nulla facilisi cras non velit nec nisi vulputate nonummy maecenas tincidunt lacus at velit vivamus\",\"post_main_pic_id\":192,\"post_main_pic_url\":\"http://localhost:3000/picture/192\",\"post_pics\":[{\"pic_id\":54,\"pic_url\":\"http://localhost:3000/picture/54\"},{\"pic_id\":144,\"pic_url\":\"http://localhost:3000/picture/144\"},{\"pic_id\":229,\"pic_url\":\"http://localhost:3000/picture/229\"},{\"pic_id\":363,\"pic_url\":\"http://localhost:3000/picture/363\"},{\"pic_id\":172,\"pic_url\":\"http://localhost:3000/picture/172\"},{\"pic_id\":397,\"pic_url\":\"http://localhost:3000/picture/397\"},{\"pic_id\":142,\"pic_url\":\"http://localhost:3000/picture/142\"},{\"pic_id\":291,\"pic_url\":\"http://localhost:3000/picture/291\"},{\"pic_id\":106,\"pic_url\":\"http://localhost:3000/picture/106\"},{\"pic_id\":4,\"pic_url\":\"http://localhost:3000/picture/4\"},{\"pic_id\":109,\"pic_url\":\"http://localhost:3000/picture/109\"},{\"pic_id\":139,\"pic_url\":\"http://localhost:3000/picture/139\"}],\"post_tags\":[{\"tag_id\":17,\"tag_name\":\"malesuada\"},{\"tag_id\":34,\"tag_name\":\"ridiculus\"},{\"tag_id\":138,\"tag_name\":\"ultrices\"}]},{\"post_id\":30,\"author\":{\"author_id\":40,\"user_id\":40,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"post_name\":\"ut volutpat\",\"post_create_date\":\"2021-01-04\",\"post_category\":{\"category_id\":174,\"category_name\":\"erat\",\"super_category\":{\"category_id\":108,\"category_name\":\"enim\",\"super_category\":{\"category_id\":89,\"category_name\":\"in\",\"super_category\":{\"category_id\":28,\"category_name\":\"luctus\",\"super_category\":{\"category_id\":4,\"category_name\":\"tincidunt\",\"super_category\":\"NULL\"}}}}},\"post_text\":\"condimentum curabitur in libero ut massa volutpat convallis morbi odio odio elementum eu interdum eu tincidunt in leo maecenas pulvinar lobortis\",\"post_main_pic_id\":416,\"post_main_pic_url\":\"http://localhost:3000/picture/416\",\"post_pics\":[{\"pic_id\":394,\"pic_url\":\"http://localhost:3000/picture/394\"}],\"post_tags\":[{\"tag_id\":44,\"tag_name\":\"mauris\"}]}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getPost/1", rawQueryString = "", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","e23e4322-4e1a-4f9f-b2e5-af5f3d439ede"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50924, pathInfo = ["getPost","1"], queryString = [], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get post command
DEBUG: Checking existence entity (user_id) in the DB
INFO: Entity (user_id) exist
DEBUG: Select data from DB. Table: posts JOIN authors ON authors.author_id = posts.author_id 
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Output response: "{\"post_id\":1,\"author\":{\"author_id\":42,\"user_id\":42,\"author_info\":\"Duis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa. Donec dapibus. Duis at velit eu est congue elementum.\"},\"post_name\":\"vel augue vestibulum\",\"post_create_date\":\"2018-07-12\",\"post_category\":{\"category_id\":47,\"category_name\":\"dolor\",\"super_category\":{\"category_id\":11,\"category_name\":\"id\",\"super_category\":\"NULL\"}},\"post_text\":\"ac\",\"post_main_pic_id\":253,\"post_main_pic_url\":\"http://localhost:3000/picture/253\",\"post_pics\":[{\"pic_id\":426,\"pic_url\":\"http://localhost:3000/picture/426\"},{\"pic_id\":221,\"pic_url\":\"http://localhost:3000/picture/221\"},{\"pic_id\":313,\"pic_url\":\"http://localhost:3000/picture/313\"}],\"post_tags\":[{\"tag_id\":35,\"tag_name\":\"rutrum\"},{\"tag_id\":57,\"tag_name\":\"libero\"},{\"tag_id\":102,\"tag_name\":\"dapibus\"}]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getPosts/1", rawQueryString = "?text_in=ove", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","9a088d94-d4a0-4a21-8453-bab0b102e8ee"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50924, pathInfo = ["getPosts","1"], queryString = [("text_in",Just "ove")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get posts command
DEBUG: Select data from DB. Table: posts JOIN authors ON authors.author_id = posts.author_id 
INFO: Data received from DB
DEBUG: Output response: "{\"page\":1,\"posts\":[]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getPosts/1", rawQueryString = "?text_in=ov", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","fb81cff5-771b-4f51-bf6a-aaff92756015"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50924, pathInfo = ["getPosts","1"], queryString = [("text_in",Just "ov")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get posts command
DEBUG: Select data from DB. Table: posts JOIN authors ON authors.author_id = posts.author_id 
INFO: Data received from DB
DEBUG: Output response: "{\"page\":1,\"posts\":[]}"
DEBUG: Connect to DB
DEBUG: Incoming request: Request {requestMethod = "POST", httpVersion = HTTP/1.1, rawPathInfo = "/getPosts/1", rawQueryString = "?text_in=o", requestHeaders = [("Content-Type","application/json"),("User-Agent","PostmanRuntime/7.26.8"),("Accept","*/*"),("Postman-Token","ad72135e-b00d-406c-8499-46ef22a505e4"),("Host","localhost:3000"),("Accept-Encoding","gzip, deflate, br"),("Connection","keep-alive"),("Content-Length","454")], isSecure = False, remoteHost = 127.0.0.1:50924, pathInfo = ["getPosts","1"], queryString = [("text_in",Just "o")], requestBody = <IO ByteString>, vault = <Vault>, requestBodyLength = KnownLength 454, requestHeaderHost = Just "localhost:3000", requestHeaderRange = Nothing}
INFO: Get posts command
DEBUG: Select data from DB. Table: posts JOIN authors ON authors.author_id = posts.author_id 
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: categories
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: postspics
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Select data from DB. Table: poststags AS pt JOIN tags ON pt.tag_id=tags.tag_id
INFO: Data received from DB
DEBUG: Output response: "{\"page\":1,\"posts\":[{\"post_id\":16,\"author\":{\"author_id\":33,\"user_id\":33,\"author_info\":\"Duis consequat dui nec nisi volutpat eleifend. Donec ut dolor. Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis.\"},\"post_name\":\"convallis\",\"post_create_date\":\"2021-02-02\",\"post_category\":{\"category_id\":66,\"category_name\":\"nec\",\"super_category\":{\"category_id\":46,\"category_name\":\"lacinia\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}}},\"post_text\":\"mi nulla ac enim in tempor turpis nec euismod scelerisque quam turpis adipiscing lorem vitae mattis nibh ligula nec sem duis aliquam convallis nunc\",\"post_main_pic_id\":96,\"post_main_pic_url\":\"http://localhost:3000/picture/96\",\"post_pics\":[{\"pic_id\":114,\"pic_url\":\"http://localhost:3000/picture/114\"},{\"pic_id\":421,\"pic_url\":\"http://localhost:3000/picture/421\"},{\"pic_id\":46,\"pic_url\":\"http://localhost:3000/picture/46\"},{\"pic_id\":64,\"pic_url\":\"http://localhost:3000/picture/64\"}],\"post_tags\":[{\"tag_id\":29,\"tag_name\":\"amet\"},{\"tag_id\":67,\"tag_name\":\"cras\"},{\"tag_id\":103,\"tag_name\":\"consequat\"},{\"tag_id\":104,\"tag_name\":\"iaculis\"},{\"tag_id\":136,\"tag_name\":\"mattis\"}]},{\"post_id\":37,\"author\":{\"author_id\":4,\"user_id\":4,\"author_info\":\"Cras mi pede, malesuada in, imperdiet et, commodo vulputate, justo.\"},\"post_name\":\"tempus vivamus in\",\"post_create_date\":\"2021-01-14\",\"post_category\":{\"category_id\":37,\"category_name\":\"lacus\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}},\"post_text\":\"etiam justo etiam pretium iaculis justo in hac habitasse platea dictumst etiam faucibus cursus urna ut tellus nulla ut erat id mauris vulputate elementum nullam varius nulla facilisi cras non velit nec nisi vulputate nonummy maecenas tincidunt lacus at velit vivamus\",\"post_main_pic_id\":192,\"post_main_pic_url\":\"http://localhost:3000/picture/192\",\"post_pics\":[{\"pic_id\":54,\"pic_url\":\"http://localhost:3000/picture/54\"},{\"pic_id\":144,\"pic_url\":\"http://localhost:3000/picture/144\"},{\"pic_id\":229,\"pic_url\":\"http://localhost:3000/picture/229\"},{\"pic_id\":363,\"pic_url\":\"http://localhost:3000/picture/363\"},{\"pic_id\":172,\"pic_url\":\"http://localhost:3000/picture/172\"},{\"pic_id\":397,\"pic_url\":\"http://localhost:3000/picture/397\"},{\"pic_id\":142,\"pic_url\":\"http://localhost:3000/picture/142\"},{\"pic_id\":291,\"pic_url\":\"http://localhost:3000/picture/291\"},{\"pic_id\":106,\"pic_url\":\"http://localhost:3000/picture/106\"},{\"pic_id\":4,\"pic_url\":\"http://localhost:3000/picture/4\"},{\"pic_id\":109,\"pic_url\":\"http://localhost:3000/picture/109\"},{\"pic_id\":139,\"pic_url\":\"http://localhost:3000/picture/139\"}],\"post_tags\":[{\"tag_id\":17,\"tag_name\":\"malesuada\"},{\"tag_id\":34,\"tag_name\":\"ridiculus\"},{\"tag_id\":138,\"tag_name\":\"ultrices\"}]},{\"post_id\":30,\"author\":{\"author_id\":40,\"user_id\":40,\"author_info\":\"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Donec pharetra, magna vestibulum aliquet ultrices, erat tortor sollicitudin mi, sit amet lobortis sapien sapien non mi. Integer ac neque. Duis bibendum. Morbi non quam nec dui luctus rutrum.\"},\"post_name\":\"ut volutpat\",\"post_create_date\":\"2021-01-04\",\"post_category\":{\"category_id\":174,\"category_name\":\"erat\",\"super_category\":{\"category_id\":108,\"category_name\":\"enim\",\"super_category\":{\"category_id\":89,\"category_name\":\"in\",\"super_category\":{\"category_id\":28,\"category_name\":\"luctus\",\"super_category\":{\"category_id\":4,\"category_name\":\"tincidunt\",\"super_category\":\"NULL\"}}}}},\"post_text\":\"condimentum curabitur in libero ut massa volutpat convallis morbi odio odio elementum eu interdum eu tincidunt in leo maecenas pulvinar lobortis\",\"post_main_pic_id\":416,\"post_main_pic_url\":\"http://localhost:3000/picture/416\",\"post_pics\":[{\"pic_id\":394,\"pic_url\":\"http://localhost:3000/picture/394\"}],\"post_tags\":[{\"tag_id\":44,\"tag_name\":\"mauris\"}]},{\"post_id\":44,\"author\":{\"author_id\":35,\"user_id\":35,\"author_info\":\"Nunc rhoncus dui vel sem. Sed sagittis.\"},\"post_name\":\"tristique in tempus\",\"post_create_date\":\"2020-12-21\",\"post_category\":{\"category_id\":116,\"category_name\":\"magnis\",\"super_category\":{\"category_id\":66,\"category_name\":\"nec\",\"super_category\":{\"category_id\":46,\"category_name\":\"lacinia\",\"super_category\":{\"category_id\":15,\"category_name\":\"donec\",\"super_category\":\"NULL\"}}}},\"post_text\":\"sapien iaculis congue vivamus metus arcu adipiscing molestie hendrerit at vulputate vitae nisl aenean lectus\",\"post_main_pic_id\":288,\"post_main_pic_url\":\"http://localhost:3000/picture/288\",\"post_pics\":[{\"pic_id\":72,\"pic_url\":\"http://localhost:3000/picture/72\"},{\"pic_id\":441,\"pic_url\":\"http://localhost:3000/picture/441\"},{\"pic_id\":247,\"pic_url\":\"http://localhost:3000/picture/247\"},{\"pic_id\":45,\"pic_url\":\"http://localhost:3000/picture/45\"}],\"post_tags\":[{\"tag_id\":23,\"tag_name\":\"eget\"},{\"tag_id\":90,\"tag_name\":\"pretium\"},{\"tag_id\":111,\"tag_name\":\"eget\"},{\"tag_id\":126,\"tag_name\":\"congue\"},{\"tag_id\":128,\"tag_name\":\"facilisi\"},{\"tag_id\":131,\"tag_name\":\"cubilia\"}]},{\"post_id\":52,\"author\":{\"author_id\":21,\"user_id\":21,\"author_info\":\"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam vel augue. Vestibulum rutrum rutrum neque. Aenean auctor gravida sem.\"},\"post_name\":\"amet eleifend pede\",\"post_create_date\":\"2020-12-19\",\"post_category\":{\"category_id\":40,\"category_name\":\"pede\",\"super_category\":{\"category_id\":5,\"category_name\":\"at\",\"super_category\":\"NULL\"}},\"post_text\":\"et commodo vulputate justo in blandit ultrices enim lorem\",\"post_main_pic_id\":261,\"post_main_pic_url\":\"http://localhost:3000/picture/261\",\"post_pics\":[{\"pic_id\":477,\"pic_url\":\"http://localhost:3000/picture/477\"},{\"pic_id\":136,\"pic_url\":\"http://localhost:3000/picture/136\"},{\"pic_id\":448,\"pic_url\":\"http://localhost:3000/picture/448\"},{\"pic_id\":416,\"pic_url\":\"http://localhost:3000/picture/416\"},{\"pic_id\":344,\"pic_url\":\"http://localhost:3000/picture/344\"},{\"pic_id\":80,\"pic_url\":\"http://localhost:3000/picture/80\"},{\"pic_id\":23,\"pic_url\":\"http://localhost:3000/picture/23\"}],\"post_tags\":[{\"tag_id\":11,\"tag_name\":\"luctus\"},{\"tag_id\":73,\"tag_name\":\"aliquet\"}]}]}"
